// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/product/product.proto

/*
Package go_micro_service_product is a generated protocol buffer package.

It is generated from these files:
	proto/product/product.proto

It has these top-level messages:
	ProductInfo
	ProductImage
	ProductSize
	ProductSeo
	ResponseProduct
	RequestId
	Response
	RequestAll
	AllProduct
*/
package go_micro_service_product

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProductInfo struct {
	Id                 int64           `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ProductName        string          `protobuf:"bytes,2,opt,name=product_name,json=productName" json:"product_name,omitempty"`
	ProductSku         string          `protobuf:"bytes,3,opt,name=product_sku,json=productSku" json:"product_sku,omitempty"`
	ProductPrice       float64         `protobuf:"fixed64,4,opt,name=product_price,json=productPrice" json:"product_price,omitempty"`
	ProductDescription string          `protobuf:"bytes,5,opt,name=product_description,json=productDescription" json:"product_description,omitempty"`
	ProductCategoryId  int64           `protobuf:"varint,6,opt,name=product_category_id,json=productCategoryId" json:"product_category_id,omitempty"`
	ProductImage       []*ProductImage `protobuf:"bytes,7,rep,name=product_image,json=productImage" json:"product_image,omitempty"`
	ProductSize        []*ProductSize  `protobuf:"bytes,8,rep,name=product_size,json=productSize" json:"product_size,omitempty"`
	ProductSeo         *ProductSeo     `protobuf:"bytes,9,opt,name=product_seo,json=productSeo" json:"product_seo,omitempty"`
}

func (m *ProductInfo) Reset()                    { *m = ProductInfo{} }
func (m *ProductInfo) String() string            { return proto.CompactTextString(m) }
func (*ProductInfo) ProtoMessage()               {}
func (*ProductInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ProductInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ProductInfo) GetProductName() string {
	if m != nil {
		return m.ProductName
	}
	return ""
}

func (m *ProductInfo) GetProductSku() string {
	if m != nil {
		return m.ProductSku
	}
	return ""
}

func (m *ProductInfo) GetProductPrice() float64 {
	if m != nil {
		return m.ProductPrice
	}
	return 0
}

func (m *ProductInfo) GetProductDescription() string {
	if m != nil {
		return m.ProductDescription
	}
	return ""
}

func (m *ProductInfo) GetProductCategoryId() int64 {
	if m != nil {
		return m.ProductCategoryId
	}
	return 0
}

func (m *ProductInfo) GetProductImage() []*ProductImage {
	if m != nil {
		return m.ProductImage
	}
	return nil
}

func (m *ProductInfo) GetProductSize() []*ProductSize {
	if m != nil {
		return m.ProductSize
	}
	return nil
}

func (m *ProductInfo) GetProductSeo() *ProductSeo {
	if m != nil {
		return m.ProductSeo
	}
	return nil
}

type ProductImage struct {
	Id        int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ImageName string `protobuf:"bytes,2,opt,name=image_name,json=imageName" json:"image_name,omitempty"`
	ImageCode string `protobuf:"bytes,3,opt,name=image_code,json=imageCode" json:"image_code,omitempty"`
	ImageUrl  string `protobuf:"bytes,4,opt,name=image_url,json=imageUrl" json:"image_url,omitempty"`
}

func (m *ProductImage) Reset()                    { *m = ProductImage{} }
func (m *ProductImage) String() string            { return proto.CompactTextString(m) }
func (*ProductImage) ProtoMessage()               {}
func (*ProductImage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ProductImage) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ProductImage) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

func (m *ProductImage) GetImageCode() string {
	if m != nil {
		return m.ImageCode
	}
	return ""
}

func (m *ProductImage) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

type ProductSize struct {
	Id       int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	SizeName string `protobuf:"bytes,2,opt,name=size_name,json=sizeName" json:"size_name,omitempty"`
	SizeCode string `protobuf:"bytes,3,opt,name=size_code,json=sizeCode" json:"size_code,omitempty"`
}

func (m *ProductSize) Reset()                    { *m = ProductSize{} }
func (m *ProductSize) String() string            { return proto.CompactTextString(m) }
func (*ProductSize) ProtoMessage()               {}
func (*ProductSize) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ProductSize) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ProductSize) GetSizeName() string {
	if m != nil {
		return m.SizeName
	}
	return ""
}

func (m *ProductSize) GetSizeCode() string {
	if m != nil {
		return m.SizeCode
	}
	return ""
}

type ProductSeo struct {
	Id             int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	SeoTitle       string `protobuf:"bytes,2,opt,name=seo_title,json=seoTitle" json:"seo_title,omitempty"`
	SeoKeywords    string `protobuf:"bytes,3,opt,name=seo_keywords,json=seoKeywords" json:"seo_keywords,omitempty"`
	SeoDescription string `protobuf:"bytes,4,opt,name=seo_description,json=seoDescription" json:"seo_description,omitempty"`
	SeoCode        string `protobuf:"bytes,5,opt,name=seo_code,json=seoCode" json:"seo_code,omitempty"`
}

func (m *ProductSeo) Reset()                    { *m = ProductSeo{} }
func (m *ProductSeo) String() string            { return proto.CompactTextString(m) }
func (*ProductSeo) ProtoMessage()               {}
func (*ProductSeo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ProductSeo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ProductSeo) GetSeoTitle() string {
	if m != nil {
		return m.SeoTitle
	}
	return ""
}

func (m *ProductSeo) GetSeoKeywords() string {
	if m != nil {
		return m.SeoKeywords
	}
	return ""
}

func (m *ProductSeo) GetSeoDescription() string {
	if m != nil {
		return m.SeoDescription
	}
	return ""
}

func (m *ProductSeo) GetSeoCode() string {
	if m != nil {
		return m.SeoCode
	}
	return ""
}

type ResponseProduct struct {
	ProductId int64 `protobuf:"varint,1,opt,name=product_id,json=productId" json:"product_id,omitempty"`
}

func (m *ResponseProduct) Reset()                    { *m = ResponseProduct{} }
func (m *ResponseProduct) String() string            { return proto.CompactTextString(m) }
func (*ResponseProduct) ProtoMessage()               {}
func (*ResponseProduct) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ResponseProduct) GetProductId() int64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

type RequestId struct {
	ProductId int64 `protobuf:"varint,1,opt,name=product_id,json=productId" json:"product_id,omitempty"`
}

func (m *RequestId) Reset()                    { *m = RequestId{} }
func (m *RequestId) String() string            { return proto.CompactTextString(m) }
func (*RequestId) ProtoMessage()               {}
func (*RequestId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RequestId) GetProductId() int64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

type Response struct {
	Msg string `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Response) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type RequestAll struct {
}

func (m *RequestAll) Reset()                    { *m = RequestAll{} }
func (m *RequestAll) String() string            { return proto.CompactTextString(m) }
func (*RequestAll) ProtoMessage()               {}
func (*RequestAll) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type AllProduct struct {
	ProductInfo []*ProductInfo `protobuf:"bytes,1,rep,name=product_info,json=productInfo" json:"product_info,omitempty"`
}

func (m *AllProduct) Reset()                    { *m = AllProduct{} }
func (m *AllProduct) String() string            { return proto.CompactTextString(m) }
func (*AllProduct) ProtoMessage()               {}
func (*AllProduct) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *AllProduct) GetProductInfo() []*ProductInfo {
	if m != nil {
		return m.ProductInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*ProductInfo)(nil), "go.micro.service.product.ProductInfo")
	proto.RegisterType((*ProductImage)(nil), "go.micro.service.product.ProductImage")
	proto.RegisterType((*ProductSize)(nil), "go.micro.service.product.ProductSize")
	proto.RegisterType((*ProductSeo)(nil), "go.micro.service.product.ProductSeo")
	proto.RegisterType((*ResponseProduct)(nil), "go.micro.service.product.ResponseProduct")
	proto.RegisterType((*RequestId)(nil), "go.micro.service.product.RequestId")
	proto.RegisterType((*Response)(nil), "go.micro.service.product.Response")
	proto.RegisterType((*RequestAll)(nil), "go.micro.service.product.RequestAll")
	proto.RegisterType((*AllProduct)(nil), "go.micro.service.product.AllProduct")
}

func init() { proto.RegisterFile("proto/product/product.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 601 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xed, 0x6e, 0xd3, 0x30,
	0x14, 0x6d, 0x16, 0x58, 0x9b, 0xdb, 0x7d, 0x80, 0xf9, 0x13, 0x36, 0x10, 0xc5, 0x1b, 0x50, 0xf8,
	0x91, 0xa1, 0xf1, 0x04, 0x65, 0x03, 0x31, 0x4d, 0x42, 0x53, 0xc6, 0x98, 0x84, 0x90, 0x42, 0x89,
	0xef, 0x2a, 0x6b, 0x6e, 0x1c, 0xe2, 0x14, 0xb4, 0x3d, 0x0d, 0x2f, 0xc3, 0x73, 0xf0, 0x2a, 0xc8,
	0x8e, 0x9d, 0x44, 0x83, 0xad, 0xe5, 0x57, 0x73, 0x3f, 0x72, 0xee, 0xb9, 0xe7, 0x9e, 0xb6, 0xb0,
	0x99, 0x17, 0xb2, 0x94, 0x3b, 0x79, 0x21, 0xd9, 0x2c, 0x2d, 0xdd, 0x67, 0x64, 0xb2, 0x24, 0x9c,
	0xc8, 0x68, 0xca, 0xd3, 0x42, 0x46, 0x0a, 0x8b, 0xef, 0x3c, 0xc5, 0xc8, 0xd6, 0xe9, 0x2f, 0x1f,
	0xfa, 0x47, 0xd5, 0xf3, 0x41, 0x76, 0x26, 0xc9, 0x1a, 0x2c, 0x71, 0x16, 0x7a, 0x03, 0x6f, 0xe8,
	0xc7, 0x4b, 0x9c, 0x91, 0xc7, 0xb0, 0x62, 0x5b, 0x93, 0x6c, 0x3c, 0xc5, 0x70, 0x69, 0xe0, 0x0d,
	0x83, 0xb8, 0x6f, 0x73, 0xef, 0xc7, 0x53, 0x24, 0x8f, 0xc0, 0x85, 0x89, 0x3a, 0x9f, 0x85, 0xbe,
	0xe9, 0x00, 0x9b, 0x3a, 0x3e, 0x9f, 0x91, 0x2d, 0x58, 0x75, 0x0d, 0x79, 0xc1, 0x53, 0x0c, 0x6f,
	0x0d, 0xbc, 0xa1, 0x17, 0x3b, 0xe0, 0x23, 0x9d, 0x23, 0x3b, 0x70, 0xcf, 0x35, 0x31, 0x54, 0x69,
	0xc1, 0xf3, 0x92, 0xcb, 0x2c, 0xbc, 0x6d, 0xd0, 0x88, 0x2d, 0xed, 0x37, 0x15, 0x12, 0x35, 0x2f,
	0xa4, 0xe3, 0x12, 0x27, 0xb2, 0xb8, 0x48, 0x38, 0x0b, 0x97, 0x0d, 0xf5, 0xbb, 0xb6, 0xb4, 0x67,
	0x2b, 0x07, 0x8c, 0x1c, 0x36, 0x2c, 0xf8, 0x74, 0x3c, 0xc1, 0xb0, 0x3b, 0xf0, 0x87, 0xfd, 0xdd,
	0xa7, 0xd1, 0x75, 0xda, 0x44, 0x4e, 0x17, 0xdd, 0x5d, 0xb3, 0x35, 0x11, 0x79, 0xd7, 0xc8, 0xa2,
	0xf8, 0x25, 0x86, 0x3d, 0x83, 0xf5, 0x64, 0x2e, 0xd6, 0x31, 0xbf, 0xc4, 0x5a, 0x3d, 0x1d, 0x90,
	0x37, 0x2d, 0xf5, 0x50, 0x86, 0xc1, 0xc0, 0x1b, 0xf6, 0x77, 0xb7, 0xe7, 0x03, 0xa1, 0x6c, 0x34,
	0x46, 0x49, 0x2f, 0x60, 0xa5, 0x4d, 0xf7, 0xaf, 0x3b, 0x3e, 0x04, 0x30, 0x5b, 0xb7, 0xaf, 0x18,
	0x98, 0x8c, 0xb9, 0x61, 0x5d, 0x4e, 0x25, 0x43, 0x7b, 0xc2, 0xaa, 0xbc, 0x27, 0x19, 0x92, 0x4d,
	0xa8, 0x82, 0x64, 0x56, 0x08, 0x73, 0xbd, 0x20, 0xee, 0x99, 0xc4, 0x49, 0x21, 0xe8, 0x69, 0xed,
	0x20, 0xb3, 0xd0, 0xd5, 0xc9, 0x9b, 0x10, 0x68, 0x89, 0xda, 0x83, 0x7b, 0x3a, 0x61, 0xe6, 0xba,
	0x62, 0x6b, 0xac, 0x29, 0xea, 0xa9, 0xf4, 0xa7, 0x07, 0xd0, 0xac, 0xfb, 0x4f, 0x60, 0x94, 0x49,
	0xc9, 0x4b, 0xd1, 0x00, 0xa3, 0xfc, 0xa0, 0x63, 0xed, 0x5b, 0x5d, 0x3c, 0xc7, 0x8b, 0x1f, 0xb2,
	0x60, 0xca, 0x62, 0xf7, 0x15, 0xca, 0x43, 0x9b, 0x22, 0xcf, 0x60, 0x5d, 0xb7, 0xb4, 0xdd, 0x56,
	0xad, 0xb6, 0xa6, 0x50, 0xb6, 0x9d, 0x76, 0x1f, 0x34, 0x6e, 0xc5, 0xb1, 0xf2, 0x63, 0x57, 0xa1,
	0x34, 0x14, 0x5f, 0xc2, 0x7a, 0x8c, 0x2a, 0x97, 0x99, 0x42, 0xcb, 0x54, 0x4b, 0x59, 0xfb, 0xcc,
	0xd1, 0x0d, 0x9c, 0x79, 0x18, 0x7d, 0x01, 0x41, 0x8c, 0xdf, 0x66, 0xa8, 0xca, 0x03, 0x36, 0xaf,
	0xf7, 0x01, 0xf4, 0x1c, 0x3a, 0xb9, 0x03, 0xfe, 0x54, 0x4d, 0x4c, 0x4f, 0x10, 0xeb, 0x47, 0xba,
	0x02, 0x60, 0x91, 0x46, 0x42, 0xd0, 0x8f, 0x00, 0x23, 0x21, 0x1c, 0x89, 0x96, 0x3f, 0x79, 0x76,
	0x26, 0x43, 0x6f, 0x41, 0x7f, 0xea, 0xdf, 0x80, 0xda, 0x9f, 0x3a, 0xd8, 0xfd, 0xed, 0x43, 0xd7,
	0xa1, 0x7e, 0x01, 0x18, 0x31, 0xe6, 0xa2, 0xc5, 0xd0, 0x36, 0x9e, 0x5f, 0xdf, 0x76, 0x45, 0x3a,
	0xda, 0x21, 0x09, 0xac, 0xbf, 0xe5, 0x99, 0x1b, 0xf1, 0x5a, 0x7f, 0x6f, 0xb7, 0x6e, 0x7a, 0xdf,
	0x0a, 0xb9, 0xb1, 0x18, 0x17, 0xda, 0x21, 0x9f, 0x61, 0xf5, 0x24, 0x67, 0xe3, 0x12, 0xff, 0x73,
	0x0b, 0x3a, 0x7f, 0x0b, 0xda, 0x21, 0x9f, 0x60, 0x75, 0x1f, 0x05, 0x36, 0xe8, 0x0b, 0x91, 0x5f,
	0x0c, 0xfb, 0x14, 0xba, 0x5a, 0x9a, 0x91, 0x10, 0x64, 0x7b, 0x2e, 0xea, 0x48, 0x88, 0x8d, 0x1b,
	0xba, 0x1a, 0xa7, 0xd0, 0xce, 0xd7, 0x65, 0xf3, 0x1f, 0xf1, 0xea, 0x4f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xb6, 0x10, 0x44, 0x6e, 0x42, 0x06, 0x00, 0x00,
}
